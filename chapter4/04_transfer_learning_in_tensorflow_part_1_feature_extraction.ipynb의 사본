{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"https://github.com/mrdbourke/tensorflow-deep-learning/blob/main/04_transfer_learning_in_tensorflow_part_1_feature_extraction.ipynb","timestamp":1686037052440}],"machine_shape":"hm","gpuType":"T4"},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"cell_type":"markdown","metadata":{"id":"ObwiuiGkZb87"},"source":["# 04. Transfer Learning with TensorFlow Part 1: Feature Extraction\n","\n","We've built a bunch of convolutional neural networks from scratch and they all seem to be learning, however, there is still plenty of room for improvement.\n","\n","To improve our model(s), we could spend a while trying different configurations, adding more layers, changing the learning rate, adjusting the number of neurons per layer and more.\n","\n","However, doing this is very time consuming.\n","\n","Luckily, there's a technique we can use to save time.\n","\n","It's called **transfer learning**, in other words, taking the patterns (also called weights) another model has learned from another problem and using them for our own problem.\n","\n","There are two main benefits to using transfer learning:\n","1. Can leverage an existing neural network architecture proven to work on problems similar to our own.\n","2. Can leverage a working neural network architecture which has **already learned** patterns on similar data to our own. This often results in achieving great results with less custom data.\n","\n","What this means is, instead of hand-crafting our own neural network architectures or building them from scratch, we can utilise models which have worked for others.\n","\n","And instead of training our own models from scratch on our own datasets, we can take the patterns a model has learned from datasets such as [ImageNet](http://www.image-net.org/) (millions of images of different objects) and use them as the foundation of our own. Doing this often leads to getting great results with less data.\n","\n","Over the next few notebooks, we'll see the power of transfer learning in action.\n","\n","## What we're going to cover\n","\n","We're going to go through the following with TensorFlow:\n","\n","- Introduce transfer learning (a way to beat all of our old self-built models)\n","- Using a smaller dataset to experiment faster (10% of training samples of 10 classes of food)\n","- Build a transfer learning feature extraction model using TensorFlow Hub\n","- Introduce the TensorBoard callback to track model training results\n","- Compare model results using TensorBoard\n","\n","## How you can use this notebook\n","\n","You can read through the descriptions and the code (it should all run, except for the cells which error on purpose), but there's a better option.\n","\n","Write all of the code yourself.\n","\n","Yes. I'm serious. Create a new notebook, and rewrite each line by yourself. Investigate it, see if you can break it, why does it break?\n","\n","You don't have to write the text descriptions but writing the code yourself is a great way to get hands-on experience.\n","\n","Don't worry if you make mistakes, we all do. The way to get better and make less mistakes is to **write more code**."]},{"cell_type":"code","source":["# Add timestamp\n","import datetime\n","print(f\"Notebook last run (end-to-end): {datetime.datetime.now()}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cCVdvbhzHoht","outputId":"298225d4-bbfc-4226-92e8-76b5fa02c66e","executionInfo":{"status":"ok","timestamp":1686037467854,"user_tz":-540,"elapsed":743,"user":{"displayName":"hj n","userId":"00096717797687667922"}}},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Notebook last run (end-to-end): 2023-06-06 07:44:27.021517\n"]}]},{"cell_type":"markdown","metadata":{"id":"UTWetPM7AWfY"},"source":["## Using a GPU\n","\n","To begin, let's check to see if we're using a GPU. Using a GPU will make sure our model trains faster than using just a CPU.\n"]},{"cell_type":"code","metadata":{"id":"Nq4kxIpQMpZT","colab":{"base_uri":"https://localhost:8080/"},"outputId":"95533b4c-0e0e-4f20-86e9-5711acb25d4a","executionInfo":{"status":"ok","timestamp":1686037502866,"user_tz":-540,"elapsed":573,"user":{"displayName":"hj n","userId":"00096717797687667922"}}},"source":["# Are we using a GPU?\n","!nvidia-smi"],"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["Tue Jun  6 07:45:02 2023       \n","+-----------------------------------------------------------------------------+\n","| NVIDIA-SMI 525.85.12    Driver Version: 525.85.12    CUDA Version: 12.0     |\n","|-------------------------------+----------------------+----------------------+\n","| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\n","| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\n","|                               |                      |               MIG M. |\n","|===============================+======================+======================|\n","|   0  Tesla T4            Off  | 00000000:00:04.0 Off |                    0 |\n","| N/A   36C    P8     9W /  70W |      0MiB / 15360MiB |      0%      Default |\n","|                               |                      |                  N/A |\n","+-------------------------------+----------------------+----------------------+\n","                                                                               \n","+-----------------------------------------------------------------------------+\n","| Processes:                                                                  |\n","|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |\n","|        ID   ID                                                   Usage      |\n","|=============================================================================|\n","|  No running processes found                                                 |\n","+-----------------------------------------------------------------------------+\n"]}]},{"cell_type":"markdown","metadata":{"id":"Ol3NDTVlRLSv"},"source":["If the cell above doesn't output something which looks like:\n","\n","```\n","Fri Sep  4 03:35:21 2020       \n","+-----------------------------------------------------------------------------+\n","| NVIDIA-SMI 450.66       Driver Version: 418.67       CUDA Version: 10.1     |\n","|-------------------------------+----------------------+----------------------+\n","| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\n","| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\n","|                               |                      |               MIG M. |\n","|===============================+======================+======================|\n","|   0  Tesla P100-PCIE...  Off  | 00000000:00:04.0 Off |                    0 |\n","| N/A   35C    P0    26W / 250W |      0MiB / 16280MiB |      0%      Default |\n","|                               |                      |                 ERR! |\n","+-------------------------------+----------------------+----------------------+\n","                                                                               \n","+-----------------------------------------------------------------------------+\n","| Processes:                                                                  |\n","|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |\n","|        ID   ID                                                   Usage      |\n","|=============================================================================|\n","|  No running processes found                                                 |\n","+-----------------------------------------------------------------------------+\n","```\n","\n","Go to Runtime -> Change Runtime Type -> Hardware Accelerator and select \"GPU\", then rerun the cell above."]},{"cell_type":"markdown","metadata":{"id":"7NY09457NKv4"},"source":["## Transfer leanring with TensorFlow Hub: Getting great results with 10% of the data\n","\n","If you've been thinking, \"surely someone else has spent the time crafting the right model for the job...\" then you're in luck. \n","\n","For many of the problems you'll want to use deep learning for, chances are, a working model already exists.\n","\n","And the good news is, you can access many of them on TensorFlow Hub.\n","\n","[TensorFlow Hub](https://tfhub.dev/) is a repository for existing model components. It makes it so you can import and use a fully trained model with as little as a URL.\n","\n","Now, I really want to demonstrate the power of transfer learning to you.\n","\n","To do so, what if I told you we could get much of the same results (or better) than our best model has gotten so far with only 10% of the original data, in other words, 10x less data.\n","\n","This seems counterintuitive right?\n","\n","Wouldn't you think more examples of what a picture of food looked like led to better results?\n","\n","And you'd be right if you thought so, generally, more data leads to better results.\n","\n","However, what if you didn't have more data? What if instead of 750 images per class, you had 75 images per class?\n","\n","Collecting 675 more images of a certain class could take a long time.\n","\n","So this is where another major benefit of transfer learning comes in.\n","\n","**Transfer learning often allows you to get great results with less data.**\n","\n","But don't just take my word for it. Let's download a subset of the data we've been using, namely 10% of the training data from the `10_food_classes` dataset and use it to train a food image classifier on.\n","\n","![](https://raw.githubusercontent.com/mrdbourke/tensorflow-deep-learning/main/images/04-transfer-learning-feature-extraction.png)\n","*What we're working towards building. Taking a pre-trained model and adding our own custom layers on top, extracting all of the underlying patterns learned on another dataset our own images.*\n","\n"]},{"cell_type":"markdown","metadata":{"id":"UIwVrX6vXb4z"},"source":["## Downloading and becoming one with the data"]},{"cell_type":"code","metadata":{"id":"qwWwP657Szfv","colab":{"base_uri":"https://localhost:8080/"},"outputId":"173ffe95-bb45-473b-94a7-dafca9158c07"},"source":["# Get data (10% of labels)\n","import zipfile\n","\n","# Download data\n","!wget https://storage.googleapis.com/ztm_tf_course/food_vision/10_food_classes_10_percent.zip\n","\n","# Unzip the downloaded file\n","zip_ref = zipfile.ZipFile(\"10_food_classes_10_percent.zip\", \"r\")\n","zip_ref.extractall()\n","zip_ref.close()"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["--2023-05-11 04:22:37--  https://storage.googleapis.com/ztm_tf_course/food_vision/10_food_classes_10_percent.zip\n","Resolving storage.googleapis.com (storage.googleapis.com)... 74.125.68.128, 74.125.24.128, 142.250.4.128, ...\n","Connecting to storage.googleapis.com (storage.googleapis.com)|74.125.68.128|:443... connected.\n","HTTP request sent, awaiting response... 200 OK\n","Length: 168546183 (161M) [application/zip]\n","Saving to: ‘10_food_classes_10_percent.zip’\n","\n","10_food_classes_10_ 100%[===================>] 160.74M  19.2MB/s    in 9.7s    \n","\n","2023-05-11 04:22:48 (16.5 MB/s) - ‘10_food_classes_10_percent.zip’ saved [168546183/168546183]\n","\n"]}]},{"cell_type":"code","metadata":{"id":"agzJYtfFBl6I","colab":{"base_uri":"https://localhost:8080/"},"outputId":"269dbc74-88ae-4546-fbed-251133541a85"},"source":["# How many images in each folder?\n","import os\n","\n","# Walk through 10 percent data directory and list number of files\n","for dirpath, dirnames, filenames in os.walk(\"10_food_classes_10_percent\"):\n","  print(f\"There are {len(dirnames)} directories and {len(filenames)} images in '{dirpath}'.\")"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["There are 2 directories and 0 images in '10_food_classes_10_percent'.\n","There are 10 directories and 0 images in '10_food_classes_10_percent/test'.\n","There are 0 directories and 250 images in '10_food_classes_10_percent/test/chicken_wings'.\n","There are 0 directories and 250 images in '10_food_classes_10_percent/test/fried_rice'.\n","There are 0 directories and 250 images in '10_food_classes_10_percent/test/ice_cream'.\n","There are 0 directories and 250 images in '10_food_classes_10_percent/test/grilled_salmon'.\n","There are 0 directories and 250 images in '10_food_classes_10_percent/test/chicken_curry'.\n","There are 0 directories and 250 images in '10_food_classes_10_percent/test/hamburger'.\n","There are 0 directories and 250 images in '10_food_classes_10_percent/test/steak'.\n","There are 0 directories and 250 images in '10_food_classes_10_percent/test/pizza'.\n","There are 0 directories and 250 images in '10_food_classes_10_percent/test/sushi'.\n","There are 0 directories and 250 images in '10_food_classes_10_percent/test/ramen'.\n","There are 10 directories and 0 images in '10_food_classes_10_percent/train'.\n","There are 0 directories and 75 images in '10_food_classes_10_percent/train/chicken_wings'.\n","There are 0 directories and 75 images in '10_food_classes_10_percent/train/fried_rice'.\n","There are 0 directories and 75 images in '10_food_classes_10_percent/train/ice_cream'.\n","There are 0 directories and 75 images in '10_food_classes_10_percent/train/grilled_salmon'.\n","There are 0 directories and 75 images in '10_food_classes_10_percent/train/chicken_curry'.\n","There are 0 directories and 75 images in '10_food_classes_10_percent/train/hamburger'.\n","There are 0 directories and 75 images in '10_food_classes_10_percent/train/steak'.\n","There are 0 directories and 75 images in '10_food_classes_10_percent/train/pizza'.\n","There are 0 directories and 75 images in '10_food_classes_10_percent/train/sushi'.\n","There are 0 directories and 75 images in '10_food_classes_10_percent/train/ramen'.\n"]}]},{"cell_type":"markdown","metadata":{"id":"F0r-zyagV7Qa"},"source":["Notice how each of the training directories now has 75 images rather than 750 images. This is key to demonstrating how well transfer learning can perform with less labelled images.\n","\n","The test directories still have the same amount of images. This means we'll be training on less data but evaluating our models on the same amount of test data."]},{"cell_type":"markdown","metadata":{"id":"EES-NoeaXfYT"},"source":["## Creating data loaders (preparing the data)\n","\n","Now we've downloaded the data, let's use the [`ImageDataGenerator`](https://www.tensorflow.org/api_docs/python/tf/keras/preprocessing/image/ImageDataGenerator) class along with the `flow_from_directory` method to load in our images."]},{"cell_type":"code","source":["from tensorflow.keras.preprocessing.image import ImageDataGenerator \n","\n","IMAGE_SHAPE= (224, 224)\n","BATCH_SIZE= 32\n","\n","train_dir= '/content/10_food_classes_10_percent/train'\n","test_dir= '/content/10_food_classes_10_percent/test'\n","\n","train_datagen= ImageDataGenerator(rescale= 1/255.)\n","test_datagen= ImageDataGenerator(rescale= 1/255.)\n","\n","print(\"Training images:\")\n","train_data_10_percent= train_datagen.flow_from_directory(train_dir,\n","                                                         target_size= IMAGE_SHAPE,\n","                                                         batch_size= BATCH_SIZE,\n","                                                         class_mode= \"categorical\")\n","print(\"Testing images:\")\n","test_data= test_datagen.flow_from_directory(test_dir,\n","                                            target_size= IMAGE_SHAPE,\n","                                            batch_size= BATCH_SIZE,\n","                                            class_mode= \"categorical\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6EUrfeFYttE5","executionInfo":{"status":"ok","timestamp":1686038475783,"user_tz":-540,"elapsed":930,"user":{"displayName":"hj n","userId":"00096717797687667922"}},"outputId":"8575ae4a-6bed-48ae-9f66-e3f1a3fcd3da"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["Training images:\n","Found 750 images belonging to 10 classes.\n","Testing images:\n","Found 2500 images belonging to 10 classes.\n"]}]},{"cell_type":"code","metadata":{"id":"YAp0GN60S-rK","colab":{"base_uri":"https://localhost:8080/"},"outputId":"e847d896-1d24-40f1-9d8e-4f72fc76471f"},"source":["# # Setup data inputs\n","# from tensorflow.keras.preprocessing.image import ImageDataGenerator\n","\n","# IMAGE_SHAPE = (224, 224)\n","# BATCH_SIZE = 32\n","\n","# train_dir = \"10_food_classes_10_percent/train/\" ## \n","# test_dir = \"10_food_classes_10_percent/test/\" ## \n","\n","# train_datagen = ImageDataGenerator(rescale=1/255.)\n","# test_datagen = ImageDataGenerator(rescale=1/255.)\n","\n","# print(\"Training images:\")\n","# train_data_10_percent = train_datagen.flow_from_directory(train_dir,\n","#                                                target_size=IMAGE_SHAPE,\n","#                                                batch_size=BATCH_SIZE,\n","#                                                class_mode=\"categorical\")\n","\n","# print(\"Testing images:\")\n","# test_data = train_datagen.flow_from_directory(test_dir,\n","#                                               target_size=IMAGE_SHAPE,\n","#                                               batch_size=BATCH_SIZE,\n","#                                               class_mode=\"categorical\")"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Training images:\n","Found 750 images belonging to 10 classes.\n","Testing images:\n","Found 2500 images belonging to 10 classes.\n"]}]},{"cell_type":"markdown","metadata":{"id":"6QWuVeSvQPoK"},"source":["Excellent! Loading in the data we can see we've got 750 images in the training dataset belonging to 10 classes (75 per class) and 2500 images in the test set belonging to 10 classes (250 per class)."]},{"cell_type":"markdown","metadata":{"id":"6Qcwii2uYjOx"},"source":["## Setting up callbacks (things to run whilst our model trains)\n","\n","Before we build a model, there's an important concept we're going to get familiar with because it's going to play a key role in our future model building experiments.\n","\n","And that concept is **callbacks**.\n","\n","[Callbacks](https://www.tensorflow.org/api_docs/python/tf/keras/callbacks) are extra functionality you can add to your models to be performed during or after training. Some of the most popular callbacks include:\n","* [**Experiment tracking with TensorBoard**](https://www.tensorflow.org/api_docs/python/tf/keras/callbacks/TensorBoard) - log the performance of multiple models and then view and compare these models in a visual way on [TensorBoard](https://www.tensorflow.org/tensorboard) (a dashboard for inspecting neural network parameters). Helpful to compare the results of different models on your data.\n","* [**Model checkpointing**](https://www.tensorflow.org/api_docs/python/tf/keras/callbacks/ModelCheckpoint) - save your model as it trains so you can stop training if needed and come back to continue off where you left. Helpful if training takes a long time and can't be done in one sitting.\n","* [**Early stopping**](https://www.tensorflow.org/api_docs/python/tf/keras/callbacks/EarlyStopping) - leave your model training for an arbitrary amount of time and have it stop training automatically when it ceases to improve. Helpful when you've got a large dataset and don't know how long training will take.\n","\n","We'll explore each of these overtime but for this notebook, we'll see how the TensorBoard callback can be used.\n","\n","The TensorBoard callback can be accessed using [`tf.keras.callbacks.TensorBoard()`](https://www.tensorflow.org/api_docs/python/tf/keras/callbacks/TensorBoard). \n","\n","Its main functionality is saving a model's training performance metrics to a specified `log_dir`.\n","\n","By default, logs are recorded every epoch using the `update_freq='epoch'` parameter. This is a good default since tracking model performance too often can slow down model training.\n","\n","To track our modelling experiments using TensorBoard, let's create a function which creates a TensorBoard callback for us.\n","\n","> 🔑 **Note:** We create a function for creating a TensorBoard callback because as we'll see later on, each model needs its own TensorBoard callback instance (so the function will create a new one each time it's run).\n","\n"]},{"cell_type":"code","metadata":{"id":"2yamhJ8xJA5x"},"source":["# Create tensorboard callback (functionized because need to create a new one for each model)\n","import datetime\n","def create_tensorboard_callback(dir_name, experiment_name):\n","  log_dir = dir_name + \"/\" + experiment_name + \"/\" + datetime.datetime.now().strftime(\"%Y%m%d-%H%M%S\")\n","  tensorboard_callback = tf.keras.callbacks.TensorBoard(\n","      log_dir=log_dir\n","  )\n","  print(f\"Saving TensorBoard log files to: {log_dir}\")\n","  return tensorboard_callback"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"11TjBJQXdCyZ"},"source":["Because you're likely to run multiple experiments, it's a good idea to be able to track them in some way.\n","\n","In our case, our function saves a model's performance logs to a directory named `[dir_name]/[experiment_name]/[current_timestamp]`, where:\n","* `dir_name` is the overall logs directory\n","* `experiment_name` is the particular experiment\n","* `current_timestamp` is the time the experiment started based on Python's [`datetime.datetime().now()`](https://docs.python.org/3/library/datetime.html#datetime.datetime.now)\n","\n","> 🔑 **Note:** Depending on your use case, the above experimenting tracking naming method may work or you might require something more specific. The good news is, the TensorBoard callback makes it easy to track modelling logs as long as you specify where to track them. So you can get as creative as you like with how you name your experiments, just make sure you or your team can understand them.\n","\n"]},{"cell_type":"markdown","metadata":{"id":"8UP8vA_nYoI7"},"source":["## Creating models using TensorFlow Hub\n","\n","In the past we've used TensorFlow to create our own models layer by layer from scratch.\n","\n","Now we're going to do a similar process, except the majority of our model's layers are going to come from [TensorFlow Hub](https://tfhub.dev/).\n","\n","In fact, we're going to use two models from TensorFlow Hub:\n","1. [ResNetV2](https://arxiv.org/abs/1603.05027) -  a state of the art computer vision model architecture from 2016.\n","2. [EfficientNet](https://arxiv.org/abs/1905.11946) - a state of the art computer vision architecture from 2019.\n","\n","State of the art means that at some point, both of these models have achieved the lowest error rate on [ImageNet (ILSVRC-2012-CLS)](http://www.image-net.org/), the gold standard of computer vision benchmarks.\n","\n","You might be wondering, how do you find these models on TensorFlow Hub?\n","\n","Here are the steps I took:\n","\n","1. Go to [tfhub.dev](https://tfhub.dev/).\n","2. Choose your problem domain, e.g. \"Image\" (we're using food images).\n","3. Select your TF version, which in our case is TF2.\n","4. Remove all \"Problem domanin\" filters except for the problem you're working on. \n","  * **Note:** \"Image feature vector\" can be used alongside almost any problem, we'll get to this soon.\n","5. The models listed are all models which could potentially be used for your problem.\n","\n","> 🤔 **Question:** *I see many options for image classification models, how do I know which is best?*\n","\n","You can see a list of state of the art models on [paperswithcode.com](https://www.paperswithcode.com), a resource for collecting the latest in deep learning paper results which have code implementations for the findings they report.\n","\n","Since we're working with images, our target are the [models which perform best on ImageNet](https://paperswithcode.com/sota/image-classification-on-imagenet).\n","\n","You'll probably find not all of the model architectures listed on paperswithcode appear on TensorFlow Hub. And this is okay, we can still use what's available.\n","\n","To find our models, let's narrow down our search using the Architecture tab.\n","\n","6. Select the Architecture tab on TensorFlow Hub and you'll see a dropdown menu of architecture names appear. \n","  * The rule of thumb here is generally, names with larger numbers means better performing models. For example, EfficientNetB4 performs better than EfficientNetB0.\n","    * However, the tradeoff with larger numbers can mean they take longer to compute. \n","7. Select EfficientNetB0 and you should see [something like the following](https://tfhub.dev/s?module-type=image-classification,image-feature-vector&network-architecture=efficientnet-b0&tf-version=tf2):\n","![](https://raw.githubusercontent.com/mrdbourke/tensorflow-deep-learning/main/images/04-tensorflow-hub-efficientnetb0.png)\n","8. Clicking the one titled \"[efficientnet/b0/feature-vector](https://tfhub.dev/tensorflow/efficientnet/b0/feature-vector/1)\" brings us to a page with a button that says \"Copy URL\". That URL is what we can use to harness the power of EfficientNetB0.\n","  * Copying the URL should give you something like this: https://tfhub.dev/tensorflow/efficientnet/b0/feature-vector/1\n","\n","> 🤔 **Question:** *I thought we were doing image classification, why do we choose feature vector and not classification?*\n","\n","Great observation. This is where the differnet types of transfer learning come into play, as is, feature extraction and fine-tuning.\n","\n","1. **\"As is\" transfer learning** is when you take a pretrained model as it is and apply it to your task without any changes. \n","\n","  * For example, many computer vision models are pretrained on the ImageNet dataset which contains 1000 different classes of images. This means passing a single image to this model will produce 1000 different prediction probability values (1 for each class). \n","\n","    * This is helpful if you have 1000 classes of image you'd like to classify and they're all the same as the ImageNet classes, however, it's not helpful if you want to classify only a small subset of classes (such as 10 different kinds of food). Model's with `\"/classification\"` in their name on TensorFlow Hub provide this kind of functionality.\n","\n","2. **Feature extraction transfer learning** is when you take the underlying patterns (also called weights) a pretrained model has learned and adjust its outputs to be more suited to your problem. \n","\n","  * For example, say the pretrained model you were using had 236 different layers (EfficientNetB0 has 236 layers), but the top layer outputs 1000 classes because it was pretrained on ImageNet. To adjust this to your own problem, you might remove the original activation layer and replace it with your own but with the right number of output classes. The important part here is that **only the top few layers become trainable, the rest remain frozen**. \n","\n","    * This way all the underlying patterns remain in the rest of the layers and you can utilise them for your own problem. This kind of transfer learning is very helpful when your data is similar to the data a model has been pretrained on.\n","\n","3. **Fine-tuning transfer learning** is when you take the underlying patterns (also called weights) of a pretrained model and adjust (fine-tune) them to your own problem. \n","\n","    * This usually means training **some, many or all** of the layers in the pretrained model. This is useful when you've got a large dataset (e.g. 100+ images per class) where your data is slightly different to the data the original model was trained on.\n","\n","A common workflow is to \"freeze\" all of the learned patterns in the bottom layers of a pretrained model so they're untrainable. And then train the top 2-3 layers of so the pretrained model can adjust its outputs to your custom data (**feature extraction**).\n","\n","After you've trained the top 2-3 layers, you can then gradually \"unfreeze\" more and more layers and run the training process on your own data to further **fine-tune** the pretrained model.\n","\n","> 🤔 **Question:** *Why train only the top 2-3 layers in feature extraction?*\n","\n","The lower a layer is in a computer vision model as in, the closer it is to the input layer, the larger the features it learn. For example, a bottom layer in a computer vision model to identify images of cats or dogs might learn the outline of legs, where as, layers closer to the output might learn the shape of teeth. Often, you'll want the larger features (learned patterns are also called features) to remain, since these are similar for both animals, where as, the differences remain in the more fine-grained features.\n","\n","![](https://raw.githubusercontent.com/mrdbourke/tensorflow-deep-learning/main/images/04-different-kinds-of-transfer-learning.png)\n","*The different kinds of transfer learning. An original model, a feature extraction model (only top 2-3 layers change) and a fine-tuning model (many or all of original model get changed).*\n","\n","Okay, enough talk, let's see this in action. Once we do, we'll explain what's happening.\n","\n","First we'll import TensorFlow and TensorFlow Hub."]},{"cell_type":"code","metadata":{"id":"xsoE9nUJNN6s"},"source":["import tensorflow as tf\n","import tensorflow_hub as hub\n","from tensorflow.keras import layers"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"nvGge7Xevt_F"},"source":["Now we'll get the feature vector URLs of two common computer vision architectures, [EfficientNetB0 (2019)](https://tfhub.dev/tensorflow/efficientnet/b0/feature-vector/1) and [ResNetV250 (2016)](https://tfhub.dev/google/imagenet/resnet_v2_50/feature_vector/4) from TensorFlow Hub using the steps above.\n","\n","We're getting both of these because we're going to compare them to see which performs better on our data.\n","\n","> 🔑 **Note:** Comparing different model architecture performance on the same data is a very common practice. The simple reason is because you want to know which model performs best for your problem.\n","\n","> **Update:** As of 14 August 2021, [EfficientNet V2 pretrained models are available on TensorFlow Hub](https://tfhub.dev/google/collections/efficientnet_v2/1). The original code in this notebook uses EfficientNet V1, it has been left unchanged. In [my experiments with this dataset](https://github.com/mrdbourke/tensorflow-deep-learning/discussions/166), V1 outperforms V2. Best to experiment with your own data and see what suits you."]},{"cell_type":"code","metadata":{"id":"LZfUivHxOCbP"},"source":["# Resnet 50 V2 feature vector\n","resnet_url = \"https://tfhub.dev/google/imagenet/resnet_v2_50/feature_vector/4\"\n","\n","# Original: EfficientNetB0 feature vector (version 1)\n","efficientnet_url = \"https://tfhub.dev/tensorflow/efficientnet/b0/feature-vector/1\"\n","\n","# # New: EfficientNetB0 feature vector (version 2)\n","# efficientnet_url = \"https://tfhub.dev/google/imagenet/efficientnet_v2_imagenet1k_b0/feature_vector/2\""],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"bdwjFaCRwdCX"},"source":["These URLs link to a saved pretrained model on TensorFlow Hub.\n","\n","When we use them in our model, the model will automatically be downloaded for us to use.\n","\n","To do this, we can use the [`KerasLayer()`](https://www.tensorflow.org/hub/api_docs/python/hub/KerasLayer) model inside the TensorFlow hub library.\n","\n","Since we're going to be comparing two models, to save ourselves code, we'll create a function `create_model()`. This function will take a model's TensorFlow Hub URL, instatiate a Keras Sequential model with the appropriate number of output layers and return the model."]},{"cell_type":"code","metadata":{"id":"p7vXoqSjId0f"},"source":["def create_model(model_url, num_classes=10):\n","  \"\"\"Takes a TensorFlow Hub URL and creates a Keras Sequential model with it.\n","  \n","  Args:\n","    model_url (str): A TensorFlow Hub feature extraction URL.\n","    num_classes (int): Number of output neurons in output layer,\n","      should be equal to number of target classes, default 10.\n","\n","  Returns:\n","    An uncompiled Keras Sequential model with model_url as feature\n","    extractor layer and Dense output layer with num_classes outputs.\n","  \"\"\"\n","  # Download the pretrained model and save it as a Keras layer\n","  feature_extractor_layer = hub.KerasLayer(model_url,\n","                                           trainable=False, # freeze the underlying patterns\n","                                           name='feature_extraction_layer',\n","                                           input_shape=IMAGE_SHAPE+(3,)) # define the input image shape\n","  \n","  # Create our own model\n","  model = tf.keras.Sequential([\n","    feature_extractor_layer, # use the feature extraction layer as the base\n","    layers.Dense(num_classes, activation='softmax', name='output_layer') # create our own output layer      \n","  ])\n","\n","  return model"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"IirF2Ohlz-6i"},"source":["Great! Now we've got a function for creating a model, we'll use it to first create a model using the ResNetV250 architecture as our feature extraction layer.\n","\n","Once the model is instantiated, we'll compile it using `categorical_crossentropy` as our loss function, the Adam optimizer and accuracy as our metric."]},{"cell_type":"code","metadata":{"id":"-KVRwwbDT-HL"},"source":["# Create model\n","resnet_model = create_model(resnet_url, num_classes=train_data_10_percent.num_classes)\n","\n","# Compile\n","resnet_model.compile(loss='categorical_crossentropy',\n","                     optimizer=tf.keras.optimizers.Adam(),\n","                     metrics=['accuracy'])"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"ZinVcxBi0jsv"},"source":["![](https://raw.githubusercontent.com/mrdbourke/tensorflow-deep-learning/main/images/04-resnet-feature-extractor.png)\n","*What our current model looks like. A ResNet50V2 backbone with a custom dense layer on top (10 classes instead of 1000 ImageNet classes). **Note:** The Image shows ResNet34 instead of ResNet50. **Image source:** https://arxiv.org/abs/1512.03385.*\n","\n","Beautiful. Time to fit the model.\n","\n","We've got the training data ready in `train_data_10_percent` as well as the test data saved as `test_data`.\n","\n","But before we call the fit function, there's one more thing we're going to add, a callback. More specifically, a TensorBoard callback so we can track the performance of our model on TensorBoard.\n","\n","We can add a callback to our model by using the `callbacks` parameter in the fit function.\n","\n","In our case, we'll pass the `callbacks` parameter the `create_tensorboard_callback()` we created earlier with some specific inputs so we know what experiments we're running.\n","\n","Let's keep this experiment short and train for 5 epochs."]},{"cell_type":"code","metadata":{"id":"2GTl0fwE0Hx6","colab":{"base_uri":"https://localhost:8080/"},"outputId":"6fa89e67-d9e7-43c0-f2a9-93cb92a7f011"},"source":["# Fit the model\n","resnet_history = resnet_model.fit(train_data_10_percent,\n","                                  epochs=5,\n","                                  steps_per_epoch=len(train_data_10_percent),\n","                                  validation_data=test_data,\n","                                  validation_steps=len(test_data),\n","                                  # Add TensorBoard callback to model (callbacks parameter takes a list)\n","                                  callbacks=[create_tensorboard_callback(dir_name=\"tensorflow_hub\", # save experiment logs here\n","                                                                         experiment_name=\"resnet50V2\")]) # name of log files"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Saving TensorBoard log files to: tensorflow_hub/resnet50V2/20230511-042304\n","Epoch 1/5\n","24/24 [==============================] - 28s 680ms/step - loss: 1.7915 - accuracy: 0.3880 - val_loss: 1.1463 - val_accuracy: 0.6368\n","Epoch 2/5\n","24/24 [==============================] - 14s 620ms/step - loss: 0.8710 - accuracy: 0.7560 - val_loss: 0.8359 - val_accuracy: 0.7352\n","Epoch 3/5\n","24/24 [==============================] - 14s 618ms/step - loss: 0.6160 - accuracy: 0.8373 - val_loss: 0.7385 - val_accuracy: 0.7676\n","Epoch 4/5\n","24/24 [==============================] - 15s 624ms/step - loss: 0.4705 - accuracy: 0.8907 - val_loss: 0.7016 - val_accuracy: 0.7728\n","Epoch 5/5\n","24/24 [==============================] - 15s 640ms/step - loss: 0.3744 - accuracy: 0.9200 - val_loss: 0.6764 - val_accuracy: 0.7772\n"]}]},{"cell_type":"markdown","metadata":{"id":"i5SuOe672UJi"},"source":["Wow! \n","\n","It seems that after only 5 epochs, the ResNetV250 feature extraction model was able to blow any of the architectures we made out of the water, achieving around 90% accuracy on the training set and nearly 80% accuracy on the test set...**with only 10 percent of the training images!**\n","\n","That goes to show the power of transfer learning. And it's one of the main reasons whenever you're trying to model your own datasets, you should look into what pretrained models already exist.\n","\n","Let's check out our model's training curves using our `plot_loss_curves` function."]},{"cell_type":"code","metadata":{"id":"Ot2QPj41ODCQ","executionInfo":{"status":"ok","timestamp":1686042897602,"user_tz":-540,"elapsed":532,"user":{"displayName":"hj n","userId":"00096717797687667922"}}},"source":["# If you wanted to, you could really turn this into a helper function to load in with a helper.py script...\n","import matplotlib.pyplot as plt\n","\n","# Plot the validation and training data separately\n","def plot_loss_curves(history):\n","  \"\"\"\n","  Returns separate loss curves for training and validation metrics.\n","  \"\"\" \n","  loss = history.history['loss']\n","  val_loss = history.history['val_loss']\n","\n","  accuracy = history.history['accuracy']\n","  val_accuracy = history.history['val_accuracy']\n","\n","  epochs = range(len(history.history['loss']))\n","\n","  # Plot loss\n","  plt.plot(epochs, loss, label='training_loss')\n","  plt.plot(epochs, val_loss, label='val_loss')\n","  plt.title('Loss')\n","  plt.xlabel('Epochs')\n","  plt.legend()\n","\n","  # Plot accuracy\n","  plt.figure()\n","  plt.plot(epochs, accuracy, label='training_accuracy')\n","  plt.plot(epochs, val_accuracy, label='val_accuracy')\n","  plt.title('Accuracy')\n","  plt.xlabel('Epochs')\n","  plt.legend();"],"execution_count":17,"outputs":[]},{"cell_type":"code","metadata":{"id":"ywQ9Wr9UODJ_","colab":{"base_uri":"https://localhost:8080/","height":927},"outputId":"67fb28a3-7ff5-4d01-d516-b37bd3b3cf2e"},"source":["plot_loss_curves(resnet_history)"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAAiMAAAHHCAYAAABtF1i4AAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAABgE0lEQVR4nO3dd3wVVf7/8de96YUkhISQhNCTGHqoUhSQrsuK61oWVsBeAFHEwnd3LevuD10VUUGsyK4NywqyikBAijSpoYaEEgglCQRIJ/XO748LV2MCJCHJpLyfj8d9aGbO3PmMl3DfnjnnjMUwDAMRERERk1jNLkBEREQaNoURERERMZXCiIiIiJhKYURERERMpTAiIiIiplIYEREREVMpjIiIiIipFEZERETEVAojIiIiYiqFERERETGVwoiIXJX58+djsVjYunWr2aWISB2lMCIiIiKmUhgRERERUymMiEi127FjByNHjsTHxwdvb28GDx7Mpk2bSrQpLCzkhRdeIDw8HHd3d5o0aUL//v2JiYlxtElJSeHuu++mefPmuLm5ERwczM0338yRI0dq+IpEpCo5m12AiNRve/fu5brrrsPHx4ennnoKFxcX3n33XQYOHMiaNWvo3bs3AM8//zwzZszgvvvuo1evXmRmZrJ161a2b9/O0KFDAbj11lvZu3cvkydPplWrVpw6dYqYmBiSkpJo1aqViVcpIlfDYhiGYXYRIlJ3zZ8/n7vvvpstW7bQo0ePUvtvueUWlixZQlxcHG3atAEgOTmZyMhIoqOjWbNmDQBdu3alefPmfPfdd2WeJz09ncaNG/PKK68wbdq06rsgEalxuk0jItWmuLiY5cuXM3r0aEcQAQgODmbMmDGsW7eOzMxMAPz8/Ni7dy8HDhwo8708PDxwdXVl9erVnDt3rkbqF5GaoTAiItXm9OnT5ObmEhkZWWpfVFQUNpuNY8eOAfD3v/+d9PR0IiIi6NSpE08++SS7du1ytHdzc+Pll1/mhx9+ICgoiOuvv55//etfpKSk1Nj1iEj1UBgRkVrh+uuv59ChQ8ybN4+OHTvywQcf0K1bNz744ANHm8cee4yEhARmzJiBu7s7f/vb34iKimLHjh0mVi4iV0thRESqTWBgIJ6ensTHx5fat3//fqxWK2FhYY5t/v7+3H333Xz++eccO3aMzp078/zzz5c4rm3btjzxxBMsX76cPXv2UFBQwGuvvVbdlyIi1UhhRESqjZOTE8OGDePbb78tMf02NTWVzz77jP79++Pj4wPAmTNnShzr7e1Nu3btyM/PByA3N5e8vLwSbdq2bUujRo0cbUSkbtLUXhGpEvPmzWPp0qWltj///PPExMTQv39/HnnkEZydnXn33XfJz8/nX//6l6Nd+/btGThwIN27d8ff35+tW7fy9ddfM2nSJAASEhIYPHgwt99+O+3bt8fZ2ZmFCxeSmprKnXfeWWPXKSJVT1N7ReSqXJzaeynHjh3j9OnTTJ8+nfXr12Oz2ejduzf//Oc/6dOnj6PdP//5TxYvXkxCQgL5+fm0bNmSu+66iyeffBIXFxfOnDnDc889x8qVKzl27BjOzs5cc801PPHEE9x22201cakiUk0URkRERMRUGjMiIiIiplIYEREREVMpjIiIiIipFEZERETEVAojIiIiYiqFERERETFVnVj0zGazcfLkSRo1aoTFYjG7HBERESkHwzDIysoiJCQEq/XS/R91IoycPHmyxPMrREREpO44duwYzZs3v+T+OhFGGjVqBNgv5uJzLERERKR2y8zMJCwszPE9fil1IoxcvDXj4+OjMCIiIlLHXGmIhQawioiIiKkURkRERMRUCiMiIiJiqjoxZkRERMxVXFxMYWGh2WVILePi4oKTk9NVv4/CiIiIXJJhGKSkpJCenm52KVJL+fn50axZs6taB0xhRERELuliEGnatCmenp5aeFIcDMMgNzeXU6dOARAcHFzp91IYERGRMhUXFzuCSJMmTcwuR2ohDw8PAE6dOkXTpk0rfctGA1hFRKRMF8eIeHp6mlyJ1GYX/3xczZiiCoeRtWvXMmrUKEJCQrBYLCxatOiKx3z66ad06dIFT09PgoODueeeezhz5kxl6hURkRqmWzNyOVXx56PCYSQnJ4cuXbowZ86ccrVfv34948aN495772Xv3r189dVXbN68mfvvv7/CxYqIiEj9U+EwMnLkSP7xj39wyy23lKv9xo0badWqFY8++iitW7emf//+PPjgg2zevLnCxYqIiNS0Vq1aMWvWrHK3X716NRaLpUZnIA0cOJDHHnusxs5X1ap9zEifPn04duwYS5YswTAMUlNT+frrr7nxxhsveUx+fj6ZmZklXiIiIuVVlV/OW7Zs4YEHHih3+759+5KcnIyv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7bff8sknn2Cz2ejbty/Hjx+viZKr3aU+w8zMTM6fP29SVVUnODiYd955h//+97/897//JSwsjIEDB7J9+3azS7sim83GY489Rr9+/ejYseMl29W138OLynt9dfF3cPfu3Xh7e+Pm5sZDDz3EwoULad++fZlt6+LnV5Hrq4uf34IFC9i+fTszZswoV3szPsM68dReqTp9+vQpkfj79u1LVFQU7777Li+++KKJlUl5REZGEhkZ6fi5b9++HDp0iNdff52PP/7YxMqubOLEiezZs4d169aZXUq1KO/11cXfwcjISGJjY8nIyODrr79m/PjxrFmz5pJf2HVNRa6vrn1+x44dY8qUKcTExNTqgbb1NowEBATg5OREampqie2pqak0a9aszGOaNWtWofZmq8w1/paLiwvR0dEcPHiwOkqscZf6DH18fPDw8DCpqurVq1evWv8FP2nSJL777jvWrl1L8+bNL9u2rv0eQsWu77fqwu+gq6sr7dq1A6B79+5s2bKFN954g3fffbdU27r4+VXk+n6rtn9+27Zt49SpU3Tr1s2xrbi4mLVr1zJ79mzy8/NxcnIqcYwZn2G9vU3j6upK9+7dWblypWObzWZj5cqVl7wX2KdPnxLtAWJiYi5779BMlbnG3youLmb37t0EBwdXV5k1qq59hlUhNja21n5+hmEwadIkFi5cyI8//kjr1q2veExd+gwrc32/VRd/B202G/n5+WXuq0uf36Vc7vp+q7Z/foMHD2b37t3ExsY6Xj169GDs2LHExsaWCiJg0mdYbUNja4EFCxYYbm5uxvz58419+/YZDzzwgOHn52ekpKQYhmEYd911l/HMM8842q9fv95wdnY2Xn31VSMuLs547rnnDBcXF2P37t1mXcIVVfQaX3jhBWPZsmXGoUOHjG3bthl33nmn4e7ubuzdu9esS7isrKwsY8eOHcaOHTsMwJg5c6axY8cO4+jRo4ZhGMYzzzxj3HXXXY72hw8fNjw9PY0nn3zSiIuLM+bMmWM4OTkZS5cuNesSLqui1/f6668bixYtMg4cOGDs3r3bmDJlimG1Wo0VK1aYdQmX9fDDDxu+vr7G6tWrjeTkZMcrNzfX0aYu/x5W5vrq2u/gM888Y6xZs8ZITEw0du3aZTzzzDOGxWIxli9fbhhG3f78DKPi11fXPr+y/HY2TW34DOt1GDEMw3jrrbeMFi1aGK6urkavXr2MTZs2OfYNGDDAGD9+fIn2X375pREREWG4uroaHTp0ML7//vsarrjiKnKNjz32mKNtUFCQceONNxrbt283oeryuTiV9bevi9c0fvx4Y8CAAaWO6dq1q+Hq6mq0adPG+Oijj2q87vKq6PW9/PLLRtu2bQ13d3fD39/fGDhwoPHjjz+aU3w5lHVtQInPpC7/Hlbm+ura7+A999xjtGzZ0nB1dTUCAwONwYMHO76oDaNuf36GUfHrq2ufX1l+G0Zqw2doMQzDqL5+FxEREZHLq7djRkRERKRuUBgRERERUymMiIiIiKkURkRERMRUCiMiIiJiKoURERERMZXCiIiIiJhKYURE6gSLxcKiRYvMLkNEqoHCiIhc0YQJE7BYLKVeI0aMMLs0EakH6u1Te0Wkao0YMYKPPvqoxDY3NzeTqhGR+kQ9IyJSLm5ubjRr1qzEq3HjxoD9FsrcuXMZOXIkHh4etGnThq+//rrE8bt37+aGG27Aw8ODJk2a8MADD5CdnV2izbx58+jQoQNubm4EBwczadKkEvvT0tK45ZZb8PT0JDw8nMWLFzv2nTt3jrFjxxIYGIiHhwfh4eGlwpOI1E4KIyJSJf72t79x6623snPnTsaOHcudd95JXFwcADk5OQwfPpzGjRuzZcsWvvrqK1asWFEibMydO5eJEyfywAMPsHv3bhYvXky7du1KnOOFF17g9ttvZ9euXdx4442MHTuWs2fPOs6/b98+fvjhB+Li4pg7dy4BAQE19x9ARCqvWh/DJyL1wvjx4w0nJyfDy8urxOuf//ynYRj2p9c+9NBDJY7p3bu38fDDDxuGYRjvvfee0bhxYyM7O9ux//vvvzesVquRkpJiGIZhhISEGH/5y18uWQNg/PWvf3X8nJ2dbQDGDz/8YBiGYYwaNcq4++67q+aCRaRGacyIiJTLoEGDmDt3bolt/v7+jn/v06dPiX19+vQhNjYWgLi4OLp06YKXl5djf79+/bDZbMTHx2OxWDh58iSDBw++bA2dO3d2/LuXlxc+Pj6cOnUKgIcffphbb72V7du3M2zYMEaPHk3fvn0rda0iUrMURkSkXLy8vErdNqkqHh4e5Wrn4uJS4meLxYLNZgNg5MiRHD16lCVLlhATE8PgwYOZOHEir776apXXKyJVS2NGRKRKbNq0qdTPUVFRAERFRbFz505ycnIc+9evX4/VaiUyMpJGjRrRqlUrVq5ceVU1BAYGMn78eD755BNmzZrFe++9d1XvJyI1Qz0jIlIu+fn5pKSklNjm7OzsGCT61Vdf0aNHD/r378+nn37K5s2b+fDDDwEYO3Yszz33HOPHj+f555/n9OnTTJ48mbvuuougoCAAnn/+eR566CGaNm3KyJEjycrKYv369UyePLlc9T377LN0796dDh06kJ+fz3fffecIQyJSuymMiEi5LF26lODg4BLbIiMj2b9/P2Cf6bJgwQIeeeQRgoOD+fzzz2nfvj0Anp6eLFu2jClTptCzZ088PT259dZbmTlzpuO9xo8fT15eHq+//jrTpk0jICCAP/7xj+Wuz9XVlenTp3PkyBE8PDy47rrrWLBgQRVcuYhUN4thGIbZRYhI3WaxWFi4cCGjR482uxQRqYM0ZkRERERMpTAiIiIiptKYERG5arrbKyJXQz0jIiIiYiqFERERETGVwoiIiIiYSmFERERETKUwIiIiIqZSGBERERFTKYyIiIiIqRRGRERExFQKIyIiImKq/w+Ko6rf7YbKTQAAAABJRU5ErkJggg==\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"5BGVFEIi3_CT"},"source":["And what about a summary of our model?"]},{"cell_type":"code","metadata":{"id":"aps1FV4qWrZb","colab":{"base_uri":"https://localhost:8080/"},"outputId":"5090ca6c-4fb4-436e-f727-b07412feea17"},"source":["# Resnet summary \n","resnet_model.summary()"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," feature_extraction_layer (K  (None, 2048)             23564800  \n"," erasLayer)                                                      \n","                                                                 \n"," output_layer (Dense)        (None, 10)                20490     \n","                                                                 \n","=================================================================\n","Total params: 23,585,290\n","Trainable params: 20,490\n","Non-trainable params: 23,564,800\n","_________________________________________________________________\n"]}]},{"cell_type":"markdown","metadata":{"id":"okdbmBA0SgCb"},"source":["You can see the power of TensorFlow Hub here. The feature extraction layer has 23,564,800 parameters which are prelearned patterns the model has already learned on the ImageNet dataset. Since we set `trainable=False`, these patterns remain frozen (non-trainable) during training.\n","\n","This means during training the model updates the 20,490 parameters in the output layer to suit our dataset.\n","\n","Okay, we've trained a ResNetV250 model, time to do the same with EfficientNetB0 model.\n","\n","The setup will be the exact same as before, except for the `model_url` parameter in the `create_model()` function and the `experiment_name` parameter in the `create_tensorboard_callback()` function."]},{"cell_type":"code","metadata":{"id":"MrGi-CpMXHav","colab":{"base_uri":"https://localhost:8080/"},"outputId":"7c0e639d-2986-401a-e2b3-7214df57645d"},"source":["# Create model\n","efficientnet_model = create_model(model_url=efficientnet_url, # use EfficientNetB0 TensorFlow Hub URL\n","                                  num_classes=train_data_10_percent.num_classes)\n","\n","# Compile EfficientNet model\n","efficientnet_model.compile(loss='categorical_crossentropy',\n","                           optimizer=tf.keras.optimizers.Adam(),\n","                           metrics=['accuracy'])\n","\n","# Fit EfficientNet model \n","efficientnet_history = efficientnet_model.fit(train_data_10_percent, # only use 10% of training data\n","                                              epochs=5, # train for 5 epochs\n","                                              steps_per_epoch=len(train_data_10_percent),\n","                                              validation_data=test_data,\n","                                              validation_steps=len(test_data),\n","                                              callbacks=[create_tensorboard_callback(dir_name=\"tensorflow_hub\", \n","                                                                                     # Track logs under different experiment name\n","                                                                                     experiment_name=\"efficientnetB0\")])"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Saving TensorBoard log files to: tensorflow_hub/efficientnetB0/20230511-042443\n","Epoch 1/5\n","24/24 [==============================] - 26s 693ms/step - loss: 1.7622 - accuracy: 0.5053 - val_loss: 1.2434 - val_accuracy: 0.7268\n","Epoch 2/5\n","24/24 [==============================] - 15s 634ms/step - loss: 1.0120 - accuracy: 0.7693 - val_loss: 0.8459 - val_accuracy: 0.8240\n","Epoch 3/5\n","24/24 [==============================] - 15s 642ms/step - loss: 0.7289 - accuracy: 0.8347 - val_loss: 0.6823 - val_accuracy: 0.8460\n","Epoch 4/5\n","24/24 [==============================] - 15s 637ms/step - loss: 0.5871 - accuracy: 0.8667 - val_loss: 0.6004 - val_accuracy: 0.8592\n","Epoch 5/5\n","24/24 [==============================] - 14s 620ms/step - loss: 0.5013 - accuracy: 0.8947 - val_loss: 0.5504 - val_accuracy: 0.8636\n"]}]},{"cell_type":"markdown","metadata":{"id":"iMbtls4C57Dr"},"source":["Holy smokes! The EfficientNetB0 model does even better than the ResNetV250 model! Achieving over 85% accuracy on the test set...again **with only 10% of the training data**.\n","\n","How cool is that?\n","\n","With a couple of lines of code we're able to leverage state of the art models and adjust them to our own use case.\n","\n","Let's check out the loss curves."]},{"cell_type":"code","metadata":{"id":"8UzgNYFdODRB","colab":{"base_uri":"https://localhost:8080/","height":927},"outputId":"98a2f8a4-ffaf-48ad-8cab-22f532f8097a"},"source":["plot_loss_curves(efficientnet_history)"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"pDi4i0H16tSa"},"source":["From the look of the EfficientNetB0 model's loss curves, it looks like if we kept training our model for longer, it might improve even further. Perhaps that's something you might want to try?\n","\n","Let's check out the model summary."]},{"cell_type":"code","metadata":{"id":"clJzUbKpODXA","colab":{"base_uri":"https://localhost:8080/"},"outputId":"5b8f7da3-f0db-4f8e-fe53-1a2124c223ff"},"source":["efficientnet_model.summary()"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_1\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," feature_extraction_layer (K  (None, 1280)             4049564   \n"," erasLayer)                                                      \n","                                                                 \n"," output_layer (Dense)        (None, 10)                12810     \n","                                                                 \n","=================================================================\n","Total params: 4,062,374\n","Trainable params: 12,810\n","Non-trainable params: 4,049,564\n","_________________________________________________________________\n"]}]},{"cell_type":"markdown","metadata":{"id":"KHTMjJG07ElO"},"source":["It seems despite having over four times less parameters (4,049,564 vs. 23,564,800) than the ResNet50V2 extraction layer, the  EfficientNetB0 feature extraction layer yields better performance. Now it's clear where the \"efficient\" name came from."]},{"cell_type":"markdown","metadata":{"id":"YV_ZWKC8SkE_"},"source":["## Comparing models using TensorBoard\n","\n","Alright, even though we've already compared the performance of our two models by looking at the accuracy scores. But what if you had more than two models? \n","\n","That's where an experiment tracking tool like [TensorBoard](https://www.tensorflow.org/tensorboard) (preinstalled in Google Colab) comes in.\n","\n","The good thing is, since we set up a TensorBoard callback, all of our model's training logs have been saved automatically. To visualize them, we can upload the results to [TensorBoard.dev](https://tensorboard.dev/).\n","\n","Uploading your results to TensorBoard.dev enables you to track and share multiple different modelling experiments. So if you needed to show someone your results, you could send them a link to your TensorBoard.dev as well as the accompanying Colab notebook.\n","\n","> 🔑 **Note:** These experiments are public, do not upload sensitive data. You can delete experiments if needed.\n","\n","### Uploading experiments to TensorBoard\n","\n","To upload a series of TensorFlow logs to TensorBoard, we can use the following command:\n","\n","```\n","Upload TensorBoard dev records\n","\n","!tensorboard dev upload --logdir ./tensorflow_hub/ \\\n","  --name \"EfficientNetB0 vs. ResNet50V2\" \\ \n","  --description \"Comparing two different TF Hub feature extraction models architectures using 10% of training images\" \\ \n","  --one_shot\n","```\n","\n","Where:\n","* `--logdir` is the target upload directory\n","* `--name` is the name of the experiment\n","* `--description` is a brief description of the experiment\n","* `--one_shot` exits the TensorBoard uploader once uploading is finished\n","\n","Running the `tensorboard dev upload` command will first ask you to authorize the upload to TensorBoard.dev. After you've authorized the upload, your log files will be uploaded."]},{"cell_type":"code","metadata":{"id":"tbKgWdIVNncW","colab":{"base_uri":"https://localhost:8080/"},"outputId":"4f6b4d76-ac38-4a17-d3c9-92cc844651ab"},"source":["# Upload TensorBoard dev records\n","!tensorboard dev upload --logdir ./tensorflow_hub/ \\\n","  --name \"EfficientNetB0 vs. ResNet50V2\" \\\n","  --description \"Comparing two different TF Hub feature extraction models architectures using 10% of training images\" \\\n","  --one_shot"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["2023-05-11 04:26:10.912881: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT\n","\n","***** TensorBoard Uploader *****\n","\n","This will upload your TensorBoard logs to https://tensorboard.dev/ from\n","the following directory:\n","\n","./tensorflow_hub/\n","\n","This TensorBoard will be visible to everyone. Do not upload sensitive\n","data.\n","\n","Your use of this service is subject to Google's Terms of Service\n","<https://policies.google.com/terms> and Privacy Policy\n","<https://policies.google.com/privacy>, and TensorBoard.dev's Terms of Service\n","<https://tensorboard.dev/policy/terms/>.\n","\n","This notice will not be shown again while you are logged into the uploader.\n","To log out, run `tensorboard dev auth revoke`.\n","\n","Continue? (yes/NO) yes\n","\n","To sign in with the TensorBoard uploader:\n","\n","1. On your computer or phone, visit:\n","\n","   https://www.google.com/device\n","\n","2. Sign in with your Google account, then enter:\n","\n","   PCB-DVW-YTS\n","\n","\n","\n","New experiment created. View your TensorBoard at: https://tensorboard.dev/experiment/dIzMI7IkT7OHD1PmA4mMRQ/\n","\n","\u001b[1m[2023-05-11T04:41:27]\u001b[0m Started scanning logdir.\n","\u001b[1m[2023-05-11T04:41:32]\u001b[0m Total uploaded: 60 scalars, 0 tensors, 2 binary objects (5.7 MB)\n","\u001b[1m[2023-05-11T04:41:32]\u001b[0m Done scanning logdir.\n","\n","\n","Done. View your TensorBoard at https://tensorboard.dev/experiment/dIzMI7IkT7OHD1PmA4mMRQ/\n"]}]},{"cell_type":"markdown","metadata":{"id":"FlVfmBdBOPvf"},"source":["Every time you upload something to TensorBoad.dev you'll get a new experiment ID. The experiment ID will look something like this: https://tensorboard.dev/experiment/73taSKxXQeGPQsNBcVvY3g/ (this is the actual experiment from this notebook).\n","\n","If you upload the same directory again, you'll get a new experiment ID to go along with it.\n","\n","This means to track your experiments, you may want to look into how you name your uploads. That way when you find them on TensorBoard.dev you can tell what happened during each experiment (e.g. \"efficientnet0_10_percent_data\").\n","\n","### Listing experiments you've saved to TensorBoard\n","\n","To see all of the experiments you've uploaded you can use the command:\n","\n","```tensorboard dev list```"]},{"cell_type":"code","metadata":{"id":"sDamroaMOFJx"},"source":["# Check out experiments\n","# !tensorboard dev list # uncomment to see"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"mdLUjm-xADQ4"},"source":["### Deleting experiments from TensorBoard\n","\n","Remember, all uploads to TensorBoard.dev are public, so to delete an experiment you can use the command:\n","\n","`tensorboard dev delete --experiment_id [INSERT_EXPERIMENT_ID]`\n","\n"]},{"cell_type":"code","metadata":{"id":"qj69wuAlT-xS","colab":{"base_uri":"https://localhost:8080/"},"outputId":"84915a92-fe6b-4cb3-9ce7-110e74ab7b61"},"source":["# Delete an experiment\n","!tensorboard dev delete --experiment_id n6kd8XZ3Rdy1jSgSLH5WjA"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["2023-05-11 04:41:41.121171: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT\n","No such experiment n6kd8XZ3Rdy1jSgSLH5WjA. Either it never existed or it has already been deleted.\n","\n"]}]},{"cell_type":"code","metadata":{"id":"Oov6qKvbU1lL"},"source":["# Check to see if experiments still exist\n","# !tensorboard dev list # uncomment to see"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"KLvUjrL2Y1Ed"},"source":["## 🛠 Exercises\n","\n","1. Build and fit a model using the same data we have here but with the MobileNetV2 architecture feature extraction ([`mobilenet_v2_100_224/feature_vector`](https://tfhub.dev/google/imagenet/mobilenet_v2_100_224/feature_vector/4)) from TensorFlow Hub, how does it perform compared to our other models?\n","2. Name 3 different image classification models on TensorFlow Hub that we haven't used.\n","3. Build a model to classify images of two different things you've taken photos of.\n","  * You can use any feature extraction layer from TensorFlow Hub you like for this.\n","  * You should aim to have at least 10 images of each class, for example to build a fridge versus oven classifier, you'll want 10 images of fridges and 10 images of ovens.\n","4. What is the current best performing model on ImageNet?\n","  * Hint: you might want to check [sotabench.com](https://www.sotabench.com) for this."]},{"cell_type":"code","source":["# 1.\n","# https://tfhub.dev/google/imagenet/mobilenet_v2_100_224/feature_vector/5\n","!nvidia-smi"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CSGCncdREKj9","executionInfo":{"status":"ok","timestamp":1686548862269,"user_tz":-540,"elapsed":7,"user":{"displayName":"hj n","userId":"00096717797687667922"}},"outputId":"8c1d0cbe-e37e-4293-cee1-9843a47f81df"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Mon Jun 12 05:47:41 2023       \n","+-----------------------------------------------------------------------------+\n","| NVIDIA-SMI 525.85.12    Driver Version: 525.85.12    CUDA Version: 12.0     |\n","|-------------------------------+----------------------+----------------------+\n","| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\n","| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\n","|                               |                      |               MIG M. |\n","|===============================+======================+======================|\n","|   0  Tesla T4            Off  | 00000000:00:04.0 Off |                    0 |\n","| N/A   44C    P8     9W /  70W |      0MiB / 15360MiB |      0%      Default |\n","|                               |                      |                  N/A |\n","+-------------------------------+----------------------+----------------------+\n","                                                                               \n","+-----------------------------------------------------------------------------+\n","| Processes:                                                                  |\n","|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |\n","|        ID   ID                                                   Usage      |\n","|=============================================================================|\n","|  No running processes found                                                 |\n","+-----------------------------------------------------------------------------+\n"]}]},{"cell_type":"code","source":["# Downloading and becoming one with the data\n","import zipfile \n","\n","!wget https://storage.googleapis.com/ztm_tf_course/food_vision/10_food_classes_10_percent.zip\n","\n","zip_ref= zipfile.ZipFile(\"10_food_classes_10_percent.zip\", \"r\")\n","zip_ref.extractall()\n","zip_ref.close()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0eYN3WjsJrjI","executionInfo":{"status":"ok","timestamp":1686549021421,"user_tz":-540,"elapsed":2412,"user":{"displayName":"hj n","userId":"00096717797687667922"}},"outputId":"c7364ff5-afcc-410f-d2fd-ea364f9a1658"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["--2023-06-12 05:50:18--  https://storage.googleapis.com/ztm_tf_course/food_vision/10_food_classes_10_percent.zip\n","Resolving storage.googleapis.com (storage.googleapis.com)... 108.177.12.128, 108.177.13.128, 74.125.26.128, ...\n","Connecting to storage.googleapis.com (storage.googleapis.com)|108.177.12.128|:443... connected.\n","HTTP request sent, awaiting response... 200 OK\n","Length: 168546183 (161M) [application/zip]\n","Saving to: ‘10_food_classes_10_percent.zip’\n","\n","10_food_classes_10_ 100%[===================>] 160.74M   201MB/s    in 0.8s    \n","\n","2023-06-12 05:50:19 (201 MB/s) - ‘10_food_classes_10_percent.zip’ saved [168546183/168546183]\n","\n"]}]},{"cell_type":"code","source":["import os \n","\n","for dirpath, dirnames, filenames in os.walk(\"10_food_classes_10_percent\"):\n","  print(f\"There are {len(dirnames)} directories and {len(filenames)} images in '{dirpath}'.\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Y5K2ytNQKDO5","executionInfo":{"status":"ok","timestamp":1686549134536,"user_tz":-540,"elapsed":281,"user":{"displayName":"hj n","userId":"00096717797687667922"}},"outputId":"f3c1e640-8f2a-40de-873d-bc3ffc4fd36a"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["There are 2 directories and 0 images in '10_food_classes_10_percent'.\n","There are 10 directories and 0 images in '10_food_classes_10_percent/test'.\n","There are 0 directories and 250 images in '10_food_classes_10_percent/test/hamburger'.\n","There are 0 directories and 250 images in '10_food_classes_10_percent/test/ramen'.\n","There are 0 directories and 250 images in '10_food_classes_10_percent/test/sushi'.\n","There are 0 directories and 250 images in '10_food_classes_10_percent/test/ice_cream'.\n","There are 0 directories and 250 images in '10_food_classes_10_percent/test/steak'.\n","There are 0 directories and 250 images in '10_food_classes_10_percent/test/chicken_curry'.\n","There are 0 directories and 250 images in '10_food_classes_10_percent/test/fried_rice'.\n","There are 0 directories and 250 images in '10_food_classes_10_percent/test/grilled_salmon'.\n","There are 0 directories and 250 images in '10_food_classes_10_percent/test/pizza'.\n","There are 0 directories and 250 images in '10_food_classes_10_percent/test/chicken_wings'.\n","There are 10 directories and 0 images in '10_food_classes_10_percent/train'.\n","There are 0 directories and 75 images in '10_food_classes_10_percent/train/hamburger'.\n","There are 0 directories and 75 images in '10_food_classes_10_percent/train/ramen'.\n","There are 0 directories and 75 images in '10_food_classes_10_percent/train/sushi'.\n","There are 0 directories and 75 images in '10_food_classes_10_percent/train/ice_cream'.\n","There are 0 directories and 75 images in '10_food_classes_10_percent/train/steak'.\n","There are 0 directories and 75 images in '10_food_classes_10_percent/train/chicken_curry'.\n","There are 0 directories and 75 images in '10_food_classes_10_percent/train/fried_rice'.\n","There are 0 directories and 75 images in '10_food_classes_10_percent/train/grilled_salmon'.\n","There are 0 directories and 75 images in '10_food_classes_10_percent/train/pizza'.\n","There are 0 directories and 75 images in '10_food_classes_10_percent/train/chicken_wings'.\n"]}]},{"cell_type":"code","source":["#Creating data loaders (preparing the data)\n","from tensorflow.keras.preprocessing.image import ImageDataGenerator\n","\n","IMAGE_SHAPE= (224, 224)\n","BATCH_SIZE= 32\n"," \n","train_dir= \"10_food_classes_10_percent/train/\"\n","test_dir= \"10_food_classes_10_percent/test/\"\n","\n","train_datagen= ImageDataGenerator(rescale= 1/255.)\n","test_datagen= ImageDataGenerator(rescale= 1/255.)\n","\n","print(\"Training images:\")\n","train_data_10_percent= train_datagen.flow_from_directory(train_dir,\n","                                                         target_size= IMAGE_SHAPE,\n","                                                         batch_size= BATCH_SIZE,\n","                                                         class_mode= \"categorical\")\n","print(\"Testing images:\")\n","test_data= train_datagen.flow_from_directory(test_dir,\n","                                             target_size =IMAGE_SHAPE,\n","                                             batch_size= BATCH_SIZE,\n","                                             class_mode=\"categorical\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"r5HisoIfLCT4","executionInfo":{"status":"ok","timestamp":1686549667868,"user_tz":-540,"elapsed":292,"user":{"displayName":"hj n","userId":"00096717797687667922"}},"outputId":"eb38d737-4010-4ced-961c-c901ad48b8d8"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["Training images:\n","Found 750 images belonging to 10 classes.\n","Testing images:\n","Found 2500 images belonging to 10 classes.\n"]}]},{"cell_type":"code","source":["# Create tensorboard callback (functionized because need to create a new one for each model)\n","import datetime \n","def create_tensorboard_callback(dir_name, experiment_name):\n","  log_dir =dir_name + \"/\" +experiment_name + \"/\" +datetime.datetime.now().strftime(\"%Y%m%d-%H%M%S\")\n","  tensorboard_callback= tf.keras.callbacks.TensorBoard(\n","      log_dir= log_dir\n","  )\n","  print(f\"Saving TensorBoard log files to: {log_dir}\")\n","  return tensorboard_callback"],"metadata":{"id":"iLH3fCJ5L1li","executionInfo":{"status":"ok","timestamp":1686554130026,"user_tz":-540,"elapsed":303,"user":{"displayName":"hj n","userId":"00096717797687667922"}}},"execution_count":61,"outputs":[]},{"cell_type":"code","source":["import tensorflow as tf \n","import tensorflow_hub as hub \n","from tensorflow.keras import layers"],"metadata":{"id":"0LlQ1yLlMalm","executionInfo":{"status":"ok","timestamp":1686549694476,"user_tz":-540,"elapsed":3,"user":{"displayName":"hj n","userId":"00096717797687667922"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["mobilenet_url= \"https://tfhub.dev/google/imagenet/mobilenet_v2_100_224/feature_vector/5\""],"metadata":{"id":"jfV3VtK9MiXo","executionInfo":{"status":"ok","timestamp":1686549740301,"user_tz":-540,"elapsed":1,"user":{"displayName":"hj n","userId":"00096717797687667922"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["def create_model(model_url, num_classes= 10):\n","  \"\"\"Takes a TensorFlow Hub URL and creates a Keras Sequential model with it.\n","\n","  Args:\n","    model_url (str): A TensorFlow Hub feature extraction URL.\n","    num_classes (int): Number of ouput neurons in output layer.\n","      should be equal to number of target classes, default 10.\n","  \n","  Returns:\n","    An uncompiled Keras Sequential model with model_url as feature\n","    extractor layer and Dense ouput layer with num_classes ouputs.\n","  \"\"\"\n","  feature_extractor_layer= hub.KerasLayer(model_url,\n","                                          trainable= False,\n","                                          name= \"feature_extraction_layer\",\n","                                          input_shape= IMAGE_SHAPE+ (3,))\n","  \n","  model= tf.keras.Sequential([\n","      feature_extractor_layer,\n","      layers.Dense(num_classes, activation='softmax', name= 'output_layer')\n","  ])\n","\n","  return model"],"metadata":{"id":"zc16h01vMuJs","executionInfo":{"status":"ok","timestamp":1686550001006,"user_tz":-540,"elapsed":3,"user":{"displayName":"hj n","userId":"00096717797687667922"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","source":["mobilenet_model= create_model(mobilenet_url)\n","\n","mobilenet_model.compile(loss= \"categorical_crossentropy\",\n","                        optimizer= tf.keras.optimizers.Adam(),\n","                        metrics=[\"accuracy\"])"],"metadata":{"id":"o9IISjmRNw15","executionInfo":{"status":"ok","timestamp":1686550271412,"user_tz":-540,"elapsed":2074,"user":{"displayName":"hj n","userId":"00096717797687667922"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":["# Fit the model\n","mobilenet_history= mobilenet_model.fit(train_data_10_percent,\n","                                       epochs= 5,\n","                                       steps_per_epoch= len(train_data_10_percent),\n","                                       validation_data= test_data,\n","                                       validation_steps= len(test_data),\n","                                       callbacks=[create_tensorboard_callback(dir_name=\"tensorflow_hub\",\n","                                                                              experiment_name= \"mobilenetV2\")])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"X9Bv4qjFOw6z","executionInfo":{"status":"ok","timestamp":1686550555886,"user_tz":-540,"elapsed":90226,"user":{"displayName":"hj n","userId":"00096717797687667922"}},"outputId":"ff693809-b303-49f5-830b-4d4f6d932646"},"execution_count":16,"outputs":[{"output_type":"stream","name":"stdout","text":["Saving TensorBoard log files to: tensorflow_hub/mobilenetV2/20230612-061425\n","Epoch 1/5\n","24/24 [==============================] - 29s 696ms/step - loss: 1.9329 - accuracy: 0.3360 - val_loss: 1.3235 - val_accuracy: 0.5960\n","Epoch 2/5\n","24/24 [==============================] - 15s 651ms/step - loss: 1.0324 - accuracy: 0.7080 - val_loss: 0.9183 - val_accuracy: 0.7068\n","Epoch 3/5\n","24/24 [==============================] - 15s 644ms/step - loss: 0.7413 - accuracy: 0.8040 - val_loss: 0.7629 - val_accuracy: 0.7648\n","Epoch 4/5\n","24/24 [==============================] - 15s 648ms/step - loss: 0.5857 - accuracy: 0.8547 - val_loss: 0.7015 - val_accuracy: 0.7804\n","Epoch 5/5\n","24/24 [==============================] - 15s 653ms/step - loss: 0.4820 - accuracy: 0.8920 - val_loss: 0.6505 - val_accuracy: 0.7944\n"]}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt \n","\n","def plot_loss_curves(history):\n","\n","  loss= history.history['loss']\n","  val_loss= history.history['val_loss']\n","\n","  accuracy= history.history['accuracy']\n","  val_accuracy= history.history['val_accuracy']\n","\n","  epochs= range(len(history.history['loss']))\n","\n","  plt.plot(epochs, loss, label= 'training_loss')\n","  plt.plot(epochs, val_loss, label= 'val_loss')\n","  plt.title('Loss')\n","  plt.xlabel('Epochs')\n","  plt.legend()\n","\n","  plt.figure()\n","  plt.plot(epochs, accuracy, label= 'training_accuracy')\n","  plt.plot(epochs, val_accuracy, label= 'val_accuracy')\n","  plt.title('Accuracy')\n","  plt.xlabel('Epochs')\n","  plt.legend();"],"metadata":{"id":"f5RBeYX7P49h","executionInfo":{"status":"ok","timestamp":1686550766854,"user_tz":-540,"elapsed":259,"user":{"displayName":"hj n","userId":"00096717797687667922"}}},"execution_count":19,"outputs":[]},{"cell_type":"code","source":["plot_loss_curves(mobilenet_history)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":927},"id":"w9HG2nqKQgbF","executionInfo":{"status":"ok","timestamp":1686550768984,"user_tz":-540,"elapsed":1028,"user":{"displayName":"hj n","userId":"00096717797687667922"}},"outputId":"f88c358b-eb12-422c-921a-428e0def9d74"},"execution_count":20,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["mobilenet_model.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"syN168eBQ0tj","executionInfo":{"status":"ok","timestamp":1686550832474,"user_tz":-540,"elapsed":5,"user":{"displayName":"hj n","userId":"00096717797687667922"}},"outputId":"76543afd-a87d-4160-fa47-8214d841c7d5"},"execution_count":21,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," feature_extraction_layer (K  (None, 1280)             2257984   \n"," erasLayer)                                                      \n","                                                                 \n"," output_layer (Dense)        (None, 10)                12810     \n","                                                                 \n","=================================================================\n","Total params: 2,270,794\n","Trainable params: 12,810\n","Non-trainable params: 2,257,984\n","_________________________________________________________________\n"]}]},{"cell_type":"code","source":["# 3.\n","# model= inception V2 https://tfhub.dev/google/imagenet/inception_v2/feature_vector/5\n","# data set= https://www.kaggle.com/datasets/samuelcortinhas/apples-or-tomatoes-image-classification\n","# 사과 , 토마토 이미지 \n","\n","# for download datasets from kaggle \n","# permission json \n","!pip install kaggle \n","from google.colab import files \n","files.upload()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":326},"id":"Db3xHED0EMv1","executionInfo":{"status":"ok","timestamp":1686551280928,"user_tz":-540,"elapsed":11092,"user":{"displayName":"hj n","userId":"00096717797687667922"}},"outputId":"f0098208-527d-47d8-acd6-da66a4b0bbcd"},"execution_count":23,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: kaggle in /usr/local/lib/python3.10/dist-packages (1.5.13)\n","Requirement already satisfied: six>=1.10 in /usr/local/lib/python3.10/dist-packages (from kaggle) (1.16.0)\n","Requirement already satisfied: certifi in /usr/local/lib/python3.10/dist-packages (from kaggle) (2022.12.7)\n","Requirement already satisfied: python-dateutil in /usr/local/lib/python3.10/dist-packages (from kaggle) (2.8.2)\n","Requirement already satisfied: requests in /usr/local/lib/python3.10/dist-packages (from kaggle) (2.27.1)\n","Requirement already satisfied: tqdm in /usr/local/lib/python3.10/dist-packages (from kaggle) (4.65.0)\n","Requirement already satisfied: python-slugify in /usr/local/lib/python3.10/dist-packages (from kaggle) (8.0.1)\n","Requirement already satisfied: urllib3 in /usr/local/lib/python3.10/dist-packages (from kaggle) (1.26.15)\n","Requirement already satisfied: text-unidecode>=1.3 in /usr/local/lib/python3.10/dist-packages (from python-slugify->kaggle) (1.3)\n","Requirement already satisfied: charset-normalizer~=2.0.0 in /usr/local/lib/python3.10/dist-packages (from requests->kaggle) (2.0.12)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests->kaggle) (3.4)\n"]},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","     <input type=\"file\" id=\"files-761ddceb-df9e-4b90-a3c5-e430d5397b1e\" name=\"files[]\" multiple disabled\n","        style=\"border:none\" />\n","     <output id=\"result-761ddceb-df9e-4b90-a3c5-e430d5397b1e\">\n","      Upload widget is only available when the cell has been executed in the\n","      current browser session. Please rerun this cell to enable.\n","      </output>\n","      <script>// Copyright 2017 Google LLC\n","//\n","// Licensed under the Apache License, Version 2.0 (the \"License\");\n","// you may not use this file except in compliance with the License.\n","// You may obtain a copy of the License at\n","//\n","//      http://www.apache.org/licenses/LICENSE-2.0\n","//\n","// Unless required by applicable law or agreed to in writing, software\n","// distributed under the License is distributed on an \"AS IS\" BASIS,\n","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n","// See the License for the specific language governing permissions and\n","// limitations under the License.\n","\n","/**\n"," * @fileoverview Helpers for google.colab Python module.\n"," */\n","(function(scope) {\n","function span(text, styleAttributes = {}) {\n","  const element = document.createElement('span');\n","  element.textContent = text;\n","  for (const key of Object.keys(styleAttributes)) {\n","    element.style[key] = styleAttributes[key];\n","  }\n","  return element;\n","}\n","\n","// Max number of bytes which will be uploaded at a time.\n","const MAX_PAYLOAD_SIZE = 100 * 1024;\n","\n","function _uploadFiles(inputId, outputId) {\n","  const steps = uploadFilesStep(inputId, outputId);\n","  const outputElement = document.getElementById(outputId);\n","  // Cache steps on the outputElement to make it available for the next call\n","  // to uploadFilesContinue from Python.\n","  outputElement.steps = steps;\n","\n","  return _uploadFilesContinue(outputId);\n","}\n","\n","// This is roughly an async generator (not supported in the browser yet),\n","// where there are multiple asynchronous steps and the Python side is going\n","// to poll for completion of each step.\n","// This uses a Promise to block the python side on completion of each step,\n","// then passes the result of the previous step as the input to the next step.\n","function _uploadFilesContinue(outputId) {\n","  const outputElement = document.getElementById(outputId);\n","  const steps = outputElement.steps;\n","\n","  const next = steps.next(outputElement.lastPromiseValue);\n","  return Promise.resolve(next.value.promise).then((value) => {\n","    // Cache the last promise value to make it available to the next\n","    // step of the generator.\n","    outputElement.lastPromiseValue = value;\n","    return next.value.response;\n","  });\n","}\n","\n","/**\n"," * Generator function which is called between each async step of the upload\n"," * process.\n"," * @param {string} inputId Element ID of the input file picker element.\n"," * @param {string} outputId Element ID of the output display.\n"," * @return {!Iterable<!Object>} Iterable of next steps.\n"," */\n","function* uploadFilesStep(inputId, outputId) {\n","  const inputElement = document.getElementById(inputId);\n","  inputElement.disabled = false;\n","\n","  const outputElement = document.getElementById(outputId);\n","  outputElement.innerHTML = '';\n","\n","  const pickedPromise = new Promise((resolve) => {\n","    inputElement.addEventListener('change', (e) => {\n","      resolve(e.target.files);\n","    });\n","  });\n","\n","  const cancel = document.createElement('button');\n","  inputElement.parentElement.appendChild(cancel);\n","  cancel.textContent = 'Cancel upload';\n","  const cancelPromise = new Promise((resolve) => {\n","    cancel.onclick = () => {\n","      resolve(null);\n","    };\n","  });\n","\n","  // Wait for the user to pick the files.\n","  const files = yield {\n","    promise: Promise.race([pickedPromise, cancelPromise]),\n","    response: {\n","      action: 'starting',\n","    }\n","  };\n","\n","  cancel.remove();\n","\n","  // Disable the input element since further picks are not allowed.\n","  inputElement.disabled = true;\n","\n","  if (!files) {\n","    return {\n","      response: {\n","        action: 'complete',\n","      }\n","    };\n","  }\n","\n","  for (const file of files) {\n","    const li = document.createElement('li');\n","    li.append(span(file.name, {fontWeight: 'bold'}));\n","    li.append(span(\n","        `(${file.type || 'n/a'}) - ${file.size} bytes, ` +\n","        `last modified: ${\n","            file.lastModifiedDate ? file.lastModifiedDate.toLocaleDateString() :\n","                                    'n/a'} - `));\n","    const percent = span('0% done');\n","    li.appendChild(percent);\n","\n","    outputElement.appendChild(li);\n","\n","    const fileDataPromise = new Promise((resolve) => {\n","      const reader = new FileReader();\n","      reader.onload = (e) => {\n","        resolve(e.target.result);\n","      };\n","      reader.readAsArrayBuffer(file);\n","    });\n","    // Wait for the data to be ready.\n","    let fileData = yield {\n","      promise: fileDataPromise,\n","      response: {\n","        action: 'continue',\n","      }\n","    };\n","\n","    // Use a chunked sending to avoid message size limits. See b/62115660.\n","    let position = 0;\n","    do {\n","      const length = Math.min(fileData.byteLength - position, MAX_PAYLOAD_SIZE);\n","      const chunk = new Uint8Array(fileData, position, length);\n","      position += length;\n","\n","      const base64 = btoa(String.fromCharCode.apply(null, chunk));\n","      yield {\n","        response: {\n","          action: 'append',\n","          file: file.name,\n","          data: base64,\n","        },\n","      };\n","\n","      let percentDone = fileData.byteLength === 0 ?\n","          100 :\n","          Math.round((position / fileData.byteLength) * 100);\n","      percent.textContent = `${percentDone}% done`;\n","\n","    } while (position < fileData.byteLength);\n","  }\n","\n","  // All done.\n","  yield {\n","    response: {\n","      action: 'complete',\n","    }\n","  };\n","}\n","\n","scope.google = scope.google || {};\n","scope.google.colab = scope.google.colab || {};\n","scope.google.colab._files = {\n","  _uploadFiles,\n","  _uploadFilesContinue,\n","};\n","})(self);\n","</script> "]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Saving kaggle.json to kaggle.json\n"]},{"output_type":"execute_result","data":{"text/plain":["{'kaggle.json': b'{\"username\":\"namhuiju\",\"key\":\"35129f7cc28690d89fbe936a3bf404f3\"}'}"]},"metadata":{},"execution_count":23}]},{"cell_type":"code","source":["# for permission\n","!mkdir -p ~/.kaggle \n","!cp kaggle.json ~/.kaggle\n","\n","!chmod 600 ~/.kaggle/kaggle.json\n","\n","!kaggle datasets download -d samuelcortinhas/apples-or-tomatoes-image-classification"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"36RpJUvESmOB","executionInfo":{"status":"ok","timestamp":1686551300709,"user_tz":-540,"elapsed":1776,"user":{"displayName":"hj n","userId":"00096717797687667922"}},"outputId":"50cc1df7-aecb-44a8-d119-c524c98b7c79"},"execution_count":24,"outputs":[{"output_type":"stream","name":"stdout","text":["Downloading apples-or-tomatoes-image-classification.zip to /content\n","\r  0% 0.00/2.33M [00:00<?, ?B/s]\n","\r100% 2.33M/2.33M [00:00<00:00, 149MB/s]\n"]}]},{"cell_type":"code","source":["# unzip\n","!unzip apples-or-tomatoes-image-classification.zip "],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"o-XXFOCaStH0","executionInfo":{"status":"ok","timestamp":1686551353419,"user_tz":-540,"elapsed":747,"user":{"displayName":"hj n","userId":"00096717797687667922"}},"outputId":"d932a816-38ff-46e3-8654-482334982069"},"execution_count":27,"outputs":[{"output_type":"stream","name":"stdout","text":["Archive:  apples-or-tomatoes-image-classification.zip\n","replace test/apples/img_p1_111.jpeg? [y]es, [n]o, [A]ll, [N]one, [r]ename: "]}]},{"cell_type":"code","source":["import os \n","\n","# Walk through pizza_steak directory and list number of files\n","for dirpath, dirnames, filenames in os.walk('train'):\n","  print(f\"There are {len(dirnames)} directories and {len(filenames)} images in '{dirpath}'.\")\n","\n","for dirpath, dirnames, filenames in os.walk('test'):\n","  print(f\"There are {len(dirnames)} directories and {len(filenames)} images in '{dirpath}'.\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iFNbRp9bSxyh","executionInfo":{"status":"ok","timestamp":1686551368695,"user_tz":-540,"elapsed":348,"user":{"displayName":"hj n","userId":"00096717797687667922"}},"outputId":"4c3bb88b-684e-49e4-fb4d-58d612de2366"},"execution_count":29,"outputs":[{"output_type":"stream","name":"stdout","text":["There are 2 directories and 0 images in 'train'.\n","There are 0 directories and 164 images in 'train/apples'.\n","There are 0 directories and 130 images in 'train/tomatoes'.\n","There are 2 directories and 0 images in 'test'.\n","There are 0 directories and 54 images in 'test/apples'.\n","There are 0 directories and 43 images in 'test/tomatoes'.\n"]}]},{"cell_type":"code","source":["import os \n","import pandas as pd\n","from pathlib import Path\n","\n","data_path = Path('/content/apples_and_tomatoes')\n","\n","if data_path.exists():\n","  print(\"dataset directory already exist.\")\n","else:\n","  data_path.mkdir(parents= True, exist_ok= True)\n","  Path('/content/apples_and_tomatoes/train/apple').mkdir(parents= True, exist_ok= True)\n","  Path('/content/apples_and_tomatoes/train/tomato').mkdir(parents= True, exist_ok= True)\n","  Path('/content/apples_and_tomatoes/test/apple').mkdir(parents= True, exist_ok= True)\n","  Path('/content/apples_and_tomatoes/test/tomato').mkdir(parents= True, exist_ok= True)\n","  print(f\"Create dataset directory: {data_path}\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"e9Hx8uxaS7i5","executionInfo":{"status":"ok","timestamp":1686551379888,"user_tz":-540,"elapsed":2,"user":{"displayName":"hj n","userId":"00096717797687667922"}},"outputId":"8b43b0c8-ebe0-4138-df78-669646a988f3"},"execution_count":30,"outputs":[{"output_type":"stream","name":"stdout","text":["Create dataset directory: /content/apples_and_tomatoes\n"]}]},{"cell_type":"code","source":["from glob import glob\n","\n","apples_img_list_all= glob('/content/train/apples/*.jpeg')\n","tomatoes_img_list_all= glob('/content/train/tomatoes/*.jpeg')\n","\n","apples_data= apples_img_list_all[:10]\n","tomatoes_data= tomatoes_img_list_all[:10]\n","apples_data, tomatoes_data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"y05ArAL7S-nB","executionInfo":{"status":"ok","timestamp":1686551393206,"user_tz":-540,"elapsed":322,"user":{"displayName":"hj n","userId":"00096717797687667922"}},"outputId":"67fc2867-7bd2-45e9-c419-d3ff1c54f6aa"},"execution_count":31,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(['/content/train/apples/img_p2_8.jpeg',\n","  '/content/train/apples/img_p2_36.jpeg',\n","  '/content/train/apples/img_p1_20.jpeg',\n","  '/content/train/apples/img_p1_17.jpeg',\n","  '/content/train/apples/img_p1_92.jpeg',\n","  '/content/train/apples/img_p3_119.jpeg',\n","  '/content/train/apples/img_p2_55.jpeg',\n","  '/content/train/apples/img_p1_46.jpeg',\n","  '/content/train/apples/img_p2_34.jpeg',\n","  '/content/train/apples/img_p2_21.jpeg'],\n"," ['/content/train/tomatoes/img_p2_41.jpeg',\n","  '/content/train/tomatoes/img_p1_20.jpeg',\n","  '/content/train/tomatoes/img_p1_45.jpeg',\n","  '/content/train/tomatoes/img_p1_17.jpeg',\n","  '/content/train/tomatoes/img_p1_62.jpeg',\n","  '/content/train/tomatoes/img_p3_25.jpeg',\n","  '/content/train/tomatoes/img_p1_84.jpeg',\n","  '/content/train/tomatoes/img_p2_21.jpeg',\n","  '/content/train/tomatoes/img_p3_8.jpeg',\n","  '/content/train/tomatoes/img_p2_35.jpeg'])"]},"metadata":{},"execution_count":31}]},{"cell_type":"code","source":["apples_train_data, apples_test_data = apples_data[:8], apples_data[:2]\n","tomatoes_train_data, tomatoes_test_data= tomatoes_data[:8], tomatoes_data[:2]\n","\n","len(apples_train_data), len(apples_test_data), len(tomatoes_train_data), len(tomatoes_test_data)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"On3-hcfZTBAc","executionInfo":{"status":"ok","timestamp":1686551402260,"user_tz":-540,"elapsed":2,"user":{"displayName":"hj n","userId":"00096717797687667922"}},"outputId":"152517a9-216c-426e-d234-30bacaa6c97e"},"execution_count":32,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(8, 2, 8, 2)"]},"metadata":{},"execution_count":32}]},{"cell_type":"code","source":["!mv /content/train/apples/img_p2_8.jpeg /content/apples_and_tomatoes/train/apple\n","!mv /content/train/apples/img_p2_26.jpeg /content/apples_and_tomatoes/train/apple\n","!mv /content/train/apples/img_p1_20.jpeg /content/apples_and_tomatoes/train/apple\n","!mv /content/train/apples/img_p1_17.jpeg /content/apples_and_tomatoes/train/apple\n","!mv /content/train/apples/img_p1_92.jpeg /content/apples_and_tomatoes/train/apple\n","!mv /content/train/apples/img_p3_119.jpeg /content/apples_and_tomatoes/train/apple\n","!mv /content/train/apples/img_p2_55.jpeg /content/apples_and_tomatoes/train/apple\n","!mv /content/train/apples/img_p1_46.jpeg /content/apples_and_tomatoes/train/apple\n","!mv /content/train/apples/img_p2_34.jpeg /content/apples_and_tomatoes/train/apple\n","!mv /content/train/apples/img_p2_21.jpeg /content/apples_and_tomatoes/train/apple"],"metadata":{"id":"H7oDDv3nTF2l","executionInfo":{"status":"ok","timestamp":1686551531053,"user_tz":-540,"elapsed":2023,"user":{"displayName":"hj n","userId":"00096717797687667922"}}},"execution_count":33,"outputs":[]},{"cell_type":"code","source":["!mv /content/apples_and_tomatoes/train/apple/img_p2_34.jpeg /content/apples_and_tomatoes/test/apple\n","!mv /content/apples_and_tomatoes/train/apple/img_p2_21.jpeg /content/apples_and_tomatoes/test/apple"],"metadata":{"id":"KuQzaqPQTpXi","executionInfo":{"status":"ok","timestamp":1686551636835,"user_tz":-540,"elapsed":281,"user":{"displayName":"hj n","userId":"00096717797687667922"}}},"execution_count":34,"outputs":[]},{"cell_type":"code","source":["!mv /content/train/tomatoes/img_p2_41.jpeg /content/apples_and_tomatoes/train/tomato\n","!mv /content/train/tomatoes/img_p1_20.jpeg /content/apples_and_tomatoes/train/tomato\n","!mv /content/train/tomatoes/img_p1_45.jpeg /content/apples_and_tomatoes/train/tomato\n","!mv /content/train/tomatoes/img_p1_17.jpeg /content/apples_and_tomatoes/train/tomato\n","!mv /content/train/tomatoes/img_p1_62.jpeg /content/apples_and_tomatoes/train/tomato\n","!mv /content/train/tomatoes/img_p3_25.jpeg /content/apples_and_tomatoes/train/tomato\n","!mv /content/train/tomatoes/img_p1_84.jpeg /content/apples_and_tomatoes/train/tomato\n","!mv /content/train/tomatoes/img_p2_21.jpeg /content/apples_and_tomatoes/train/tomato"],"metadata":{"id":"BwXrKPCST-Zv","executionInfo":{"status":"ok","timestamp":1686551747746,"user_tz":-540,"elapsed":892,"user":{"displayName":"hj n","userId":"00096717797687667922"}}},"execution_count":35,"outputs":[]},{"cell_type":"code","source":["!mv /content/train/tomatoes/img_p3_8.jpeg /content/apples_and_tomatoes/test/tomato\n","!mv /content/train/tomatoes/img_p2_35.jpeg /content/apples_and_tomatoes/test/tomato"],"metadata":{"id":"lt66MzzVUBCt","executionInfo":{"status":"ok","timestamp":1686551749439,"user_tz":-540,"elapsed":490,"user":{"displayName":"hj n","userId":"00096717797687667922"}}},"execution_count":36,"outputs":[]},{"cell_type":"code","source":["len(os.listdir('/content/apples_and_tomatoes/train/apple'))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kFPoHaFcUXz8","executionInfo":{"status":"ok","timestamp":1686551758320,"user_tz":-540,"elapsed":354,"user":{"displayName":"hj n","userId":"00096717797687667922"}},"outputId":"ce32f791-8821-4a16-8945-d58fdb9a2913"},"execution_count":37,"outputs":[{"output_type":"execute_result","data":{"text/plain":["8"]},"metadata":{},"execution_count":37}]},{"cell_type":"code","source":["import pathlib \n","import numpy as np\n","\n","data_dir= pathlib.Path('/content/apples_and_tomatoes/train/')\n","class_names= np.array(sorted([item.name for item in data_dir.glob('*')]))\n","print(class_names)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yl4xVWzVUZ2i","executionInfo":{"status":"ok","timestamp":1686551772539,"user_tz":-540,"elapsed":331,"user":{"displayName":"hj n","userId":"00096717797687667922"}},"outputId":"97cfccca-4517-4144-e819-a695d2ec9d22"},"execution_count":38,"outputs":[{"output_type":"stream","name":"stdout","text":["['apple' 'tomato']\n"]}]},{"cell_type":"code","source":["import random\n","import matplotlib.pyplot as plt\n","import matplotlib.image as mpimg\n","\n","target_folder= '/content/apples_and_tomatoes/train/apple'\n","random_image_path = random.sample(os.listdir('/content/apples_and_tomatoes/train/apple'), k=1)\n","img= mpimg.imread(target_folder+\"/\"+ random_image_path[0])\n","plt.imshow(img);"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":433},"id":"O6Kwrab_UdWP","executionInfo":{"status":"ok","timestamp":1686551781749,"user_tz":-540,"elapsed":451,"user":{"displayName":"hj n","userId":"00096717797687667922"}},"outputId":"8a5f561b-0022-4375-bc33-770cbd7ee43d"},"execution_count":39,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["target_folder= '/content/apples_and_tomatoes/train/tomato'\n","random_image_path = random.sample(os.listdir('/content/apples_and_tomatoes/train/tomato'), k=1)\n","img= mpimg.imread(target_folder+\"/\"+ random_image_path[0])\n","plt.imshow(img);"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":433},"id":"YFaN3RmEUgJS","executionInfo":{"status":"ok","timestamp":1686551792706,"user_tz":-540,"elapsed":869,"user":{"displayName":"hj n","userId":"00096717797687667922"}},"outputId":"97780d25-c24a-4d3f-d692-889cce455d61"},"execution_count":40,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Define training and test directory paths\n","train_dir= '/content/apples_and_tomatoes/train/'\n","test_dir= '/content/apples_and_tomatoes/test/'"],"metadata":{"id":"Ya5yQUSEUiR0","executionInfo":{"status":"ok","timestamp":1686551800831,"user_tz":-540,"elapsed":2,"user":{"displayName":"hj n","userId":"00096717797687667922"}}},"execution_count":41,"outputs":[]},{"cell_type":"code","source":["# Setup data inputs\n","from tensorflow.keras.preprocessing.image import ImageDataGenerator \n","\n","IMAGE_SHAPE= (224, 224)\n","BATCH_SIZE= 32\n","\n","train_dir= \"/content/apples_and_tomatoes/train/\"\n","test_dir= \"/content/apples_and_tomatoes/test/\"\n","\n","train_datagen= ImageDataGenerator(rescale= 1/255.)\n","test_datagen= ImageDataGenerator(rescale= 1/255.)\n","\n","print(\"Training images:\")\n","train_data_10_percent= train_datagen.flow_from_directory(train_dir,\n","                                                         target_size= IMAGE_SHAPE,\n","                                                         batch_size= BATCH_SIZE,\n","                                                         class_mode= 'binary')\n","print(\"Testing images:\")\n","test_data= test_datagen.flow_from_directory(test_dir,\n","                                            target_size= IMAGE_SHAPE,\n","                                            batch_size= BATCH_SIZE,\n","                                            class_mode= 'binary')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0755r37UUrM1","executionInfo":{"status":"ok","timestamp":1686554222189,"user_tz":-540,"elapsed":3,"user":{"displayName":"hj n","userId":"00096717797687667922"}},"outputId":"1a637b45-7565-4472-b208-179caf4477b4"},"execution_count":64,"outputs":[{"output_type":"stream","name":"stdout","text":["Training images:\n","Found 16 images belonging to 2 classes.\n","Testing images:\n","Found 4 images belonging to 2 classes.\n"]}]},{"cell_type":"code","source":["inception_url= \"https://tfhub.dev/google/imagenet/inception_v2/feature_vector/5\"\n","# Create model \n","inception_model= create_model(inception_url, num_classes= 1)\n","\n","# Compile\n","inception_model.compile(loss= 'binary_crossentropy',\n","                        optimizer= tf.keras.optimizers.Adam(),\n","                        metrics= ['accuracy'])"],"metadata":{"id":"bYdpJtPlbPpO","executionInfo":{"status":"ok","timestamp":1686554461308,"user_tz":-540,"elapsed":2199,"user":{"displayName":"hj n","userId":"00096717797687667922"}}},"execution_count":71,"outputs":[]},{"cell_type":"code","source":["inception_history= inception_model.fit(train_data_10_percent,\n","                                       epochs= 5,\n","                                       steps_per_epoch=len(train_data_10_percent),\n","                                       validation_data=test_data,\n","                                       validation_steps=len(test_data),\n","                                       # Add TensorBoard callback to model (callbacks parameter takes a list)\n","                                       callbacks=[create_tensorboard_callback(dir_name=\"tensorflow_hub\", # save experiment logs here\n","                                                                            experiment_name=\"inceptionV2\")]) # name of log files"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iVpggQpAcG7j","executionInfo":{"status":"ok","timestamp":1686554469510,"user_tz":-540,"elapsed":6725,"user":{"displayName":"hj n","userId":"00096717797687667922"}},"outputId":"db5a4ad1-e027-4b6a-8999-01f82c9a9503"},"execution_count":72,"outputs":[{"output_type":"stream","name":"stdout","text":["Saving TensorBoard log files to: tensorflow_hub/inceptionV2/20230612-072102\n","Epoch 1/5\n","1/1 [==============================] - 7s 7s/step - loss: 0.7039 - accuracy: 0.5000 - val_loss: 0.7819 - val_accuracy: 0.5000\n","Epoch 2/5\n","1/1 [==============================] - 0s 128ms/step - loss: 0.6669 - accuracy: 0.5000 - val_loss: 0.7616 - val_accuracy: 0.5000\n","Epoch 3/5\n","1/1 [==============================] - 0s 110ms/step - loss: 0.6322 - accuracy: 0.5000 - val_loss: 0.7440 - val_accuracy: 0.5000\n","Epoch 4/5\n","1/1 [==============================] - 0s 116ms/step - loss: 0.5993 - accuracy: 0.5000 - val_loss: 0.7283 - val_accuracy: 0.5000\n","Epoch 5/5\n","1/1 [==============================] - 0s 124ms/step - loss: 0.5679 - accuracy: 0.5000 - val_loss: 0.7139 - val_accuracy: 0.5000\n"]}]},{"cell_type":"code","source":["plot_loss_curves(inception_history)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":927},"id":"vUtgmb61eyW1","executionInfo":{"status":"ok","timestamp":1686554498597,"user_tz":-540,"elapsed":805,"user":{"displayName":"hj n","userId":"00096717797687667922"}},"outputId":"04168426-5d26-4b7d-9670-1536a8ce7641"},"execution_count":73,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["inception_model.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8n0R31FDe3qM","executionInfo":{"status":"ok","timestamp":1686554531901,"user_tz":-540,"elapsed":439,"user":{"displayName":"hj n","userId":"00096717797687667922"}},"outputId":"3b3f9cac-6f0e-4de1-a8b9-bb1b82386b00"},"execution_count":74,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_9\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," feature_extraction_layer (K  (None, 1024)             10173112  \n"," erasLayer)                                                      \n","                                                                 \n"," output_layer (Dense)        (None, 1)                 1025      \n","                                                                 \n","=================================================================\n","Total params: 10,174,137\n","Trainable params: 1,025\n","Non-trainable params: 10,173,112\n","_________________________________________________________________\n"]}]},{"cell_type":"code","source":["# 4.\n","ViT model Top 1 accuracy : 91.1%"],"metadata":{"id":"_CSUq_EiEONd"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"w_YxwuhfRzD5"},"source":["## 📖 Extra-curriculum\n","\n","* Read through the [TensorFlow Transfer Learning Guide](https://www.tensorflow.org/tutorials/images/transfer_learning) and define the main two types of transfer learning in your own words.\n","* Go through the [Transfer Learning with TensorFlow Hub tutorial](https://www.tensorflow.org/tutorials/images/transfer_learning_with_hub) on the TensorFlow website and rewrite all of the code yourself into a new Google Colab notebook making comments about what each step does along the way.\n","* We haven't covered fine-tuning with TensorFlow Hub in this notebook, but if you'd like to know more, go through the [fine-tuning a TensorFlow Hub model tutorial](https://www.tensorflow.org/hub/tf2_saved_model#fine-tuning) on the TensorFlow homepage.How to fine-tune a tensorflow hub model:  \n","* Look into [experiment tracking with Weights & Biases](https://www.wandb.com/experiment-tracking), how could you integrate it with our existing TensorBoard logs?"]}]}